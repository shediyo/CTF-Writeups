from hashlib import md5
import random

BLOCK_SIZE = 16
ROUNDS = 2
PLUS = False
PBOX_TABLE = [[7,14,9,2,0,8,15,1,10,3,11,4,13,12,6,5], [3,12,13,0,7,1,6,9,2,5,10,14,4,8,11,15]]
SBOX_TABLE = [[124,222,151,54,2,132,254,8,155,15,135,24,196,209,228,43,57,201,200,18,110,14,88,130,4,70,95,193,11,23,51,138,241,198,187,244,77,185,251,227,202,128,249,141,83,220,178,136,165,123,154,27,143,240,150,145,53,245,84,63,9,126,192,248,73,121,233,147,60,229,113,7,102,109,149,186,79,74,69,247,205,223,20,91,212,168,236,13,160,66,72,169,197,19,162,26,140,139,170,206,112,36,213,225,144,99,159,226,177,232,217,117,195,238,216,156,137,199,167,49,28,252,218,215,10,114,242,133,29,142,92,119,180,55,97,71,161,22,48,85,255,31,219,189,6,182,98,152,127,35,210,164,33,179,118,40,62,108,183,81,38,44,234,224,93,82,52,21,101,104,105,96,129,76,50,148,30,172,56,175,203,17,89,235,208,239,12,34,107,204,111,153,0,87,116,94,188,176,120,46,42,246,163,181,65,214,67,90,125,122,32,68,166,115,58,103,100,61,158,237,25,3,146,39,106,1,173,47,207,16,131,243,5,37,190,86,231,250,194,134,157,230,191,41,78,253,171,211,64,45,184,80,59,75,221,174],
[53,33,193,239,51,36,212,61,41,115,145,9,96,84,119,209,49,52,226,144,47,105,95,127,130,15,233,162,72,126,45,129,160,240,109,206,17,67,7,63,181,158,74,13,236,187,223,26,235,194,172,25,39,4,152,168,23,131,73,98,248,116,217,150,99,71,101,118,137,108,178,55,0,243,70,237,175,32,6,155,224,182,179,8,188,75,174,207,196,234,42,184,92,255,77,189,68,165,40,200,14,214,247,16,198,59,249,112,90,253,254,57,170,167,64,103,230,222,46,164,204,88,97,37,89,157,219,147,78,3,93,86,215,82,106,154,135,91,10,213,87,5,18,252,180,76,113,159,43,146,79,244,227,163,29,58,69,250,203,140,1,35,216,218,124,60,132,238,142,134,197,220,136,205,211,50,24,65,201,80,192,22,56,173,183,102,229,246,94,171,133,100,208,107,31,81,148,156,48,21,27,251,241,153,195,199,191,225,12,149,34,202,169,111,125,120,161,114,110,245,20,228,66,231,54,122,38,186,11,121,221,44,123,190,177,30,151,141,19,176,83,85,139,232,138,2,117,104,143,210,62,166,185,128,28,242]]

def prep_ps1():
	global ROUNDS, PLUS, PBOX_TABLE, SBOX_TABLE
	ROUNDS = 1
	PLUS = False
	PBOX_TABLE = [[4,10,7,5,6,13,8,14,15,9,11,2,0,1,3,12]] 
	SBOX_TABLE = [[70,162,120,88,97,191,116,211,240,171,174,123,47,59,64,29,255,101,196,108,253,201,35,13,164,38,77,148,57,17,37,132,183,159,220,20,93,80,232,78,248,151,202,43,214,8,75,213,113,12,66,112,217,106,128,129,145,203,15,204,223,53,76,147,215,34,168,49,119,144,130,110,33,71,158,250,83,231,208,190,243,14,44,199,124,170,68,5,115,89,210,79,143,26,226,99,63,138,154,184,18,16,39,56,94,193,52,176,172,1,109,157,22,156,103,149,62,179,160,185,254,104,251,141,135,225,238,200,92,133,126,117,153,169,180,237,87,228,150,2,230,249,161,244,139,252,122,207,167,21,114,173,111,105,42,0,73,28,205,187,166,55,32,48,229,216,30,61,182,189,65,140,188,233,127,60,227,7,19,131,31,146,45,175,9,91,177,90,125,96,23,40,194,67,86,155,10,136,224,212,51,25,84,241,247,234,50,222,236,74,100,6,219,163,186,239,245,81,72,118,195,95,165,98,178,246,242,181,102,198,82,152,218,192,121,221,107,197,142,58,4,24,85,235,137,36,206,69,46,11,27,41,134,209,54,3]]

def prep_ps2():
	global ROUNDS, PLUS, PBOX_TABLE, SBOX_TABLE
	ROUNDS = 2
	PLUS = False
	PBOX_TABLE = [[7,14,9,2,0,8,15,1,10,3,11,4,13,12,6,5], [3,12,13,0,7,1,6,9,2,5,10,14,4,8,11,15]]
	SBOX_TABLE = [[124,222,151,54,2,132,254,8,155,15,135,24,196,209,228,43,57,201,200,18,110,14,88,130,4,70,95,193,11,23,51,138,241,198,187,244,77,185,251,227,202,128,249,141,83,220,178,136,165,123,154,27,143,240,150,145,53,245,84,63,9,126,192,248,73,121,233,147,60,229,113,7,102,109,149,186,79,74,69,247,205,223,20,91,212,168,236,13,160,66,72,169,197,19,162,26,140,139,170,206,112,36,213,225,144,99,159,226,177,232,217,117,195,238,216,156,137,199,167,49,28,252,218,215,10,114,242,133,29,142,92,119,180,55,97,71,161,22,48,85,255,31,219,189,6,182,98,152,127,35,210,164,33,179,118,40,62,108,183,81,38,44,234,224,93,82,52,21,101,104,105,96,129,76,50,148,30,172,56,175,203,17,89,235,208,239,12,34,107,204,111,153,0,87,116,94,188,176,120,46,42,246,163,181,65,214,67,90,125,122,32,68,166,115,58,103,100,61,158,237,25,3,146,39,106,1,173,47,207,16,131,243,5,37,190,86,231,250,194,134,157,230,191,41,78,253,171,211,64,45,184,80,59,75,221,174],
	[53,33,193,239,51,36,212,61,41,115,145,9,96,84,119,209,49,52,226,144,47,105,95,127,130,15,233,162,72,126,45,129,160,240,109,206,17,67,7,63,181,158,74,13,236,187,223,26,235,194,172,25,39,4,152,168,23,131,73,98,248,116,217,150,99,71,101,118,137,108,178,55,0,243,70,237,175,32,6,155,224,182,179,8,188,75,174,207,196,234,42,184,92,255,77,189,68,165,40,200,14,214,247,16,198,59,249,112,90,253,254,57,170,167,64,103,230,222,46,164,204,88,97,37,89,157,219,147,78,3,93,86,215,82,106,154,135,91,10,213,87,5,18,252,180,76,113,159,43,146,79,244,227,163,29,58,69,250,203,140,1,35,216,218,124,60,132,238,142,134,197,220,136,205,211,50,24,65,201,80,192,22,56,173,183,102,229,246,94,171,133,100,208,107,31,81,148,156,48,21,27,251,241,153,195,199,191,225,12,149,34,202,169,111,125,120,161,114,110,245,20,228,66,231,54,122,38,186,11,121,221,44,123,190,177,30,151,141,19,176,83,85,139,232,138,2,117,104,143,210,62,166,185,128,28,242]]

def prep_ps4():
	global ROUNDS, PLUS, PBOX_TABLE, SBOX_TABLE
	ROUNDS = 4
	PLUS = False
	PBOX_TABLE = [
	[5,4,10,13,6,7,0,1,9,3,2,14,8,12,15,11], 
	[2,9,13,7,8,6,5,1,11,0,3,15,14,4,12,10],
	[8,5,1,14,12,2,15,4,7,13,11,6,3,9,10,0], 
	[3,11,15,10,2,6,14,9,7,0,12,5,4,8,13,1]
	]

	SBOX_TABLE = [ 
	[84,72,153,203,93,105,2,19,129,70,3,188,24,98,171,109,34,155,209,132,134,133,112,46,137,28,36,255,251,62,194,81,140,90,27,229,196,31,246,65,103,249,248,124,91,168,227,123,58,181,250,190,52,107,233,185,135,11,184,128,73,120,210,211,208,234,177,147,8,170,212,104,164,204,230,254,108,200,116,166,119,110,95,176,221,75,99,86,85,33,223,167,154,174,118,97,152,41,253,160,218,206,14,125,151,243,121,10,193,244,180,54,94,29,239,61,111,79,169,215,130,141,122,26,50,252,143,217,39,142,114,7,77,145,138,245,131,9,6,60,4,195,146,100,226,117,191,71,225,87,44,83,242,183,144,47,186,22,18,228,173,150,237,15,37,113,12,178,136,20,241,149,213,126,1,189,17,198,32,235,49,66,74,45,13,224,89,197,16,127,165,182,35,159,201,57,38,207,236,162,220,231,53,175,88,56,96,106,0,148,82,51,219,202,76,232,179,199,158,187,63,67,92,69,240,43,161,23,21,156,172,238,101,222,139,247,40,30,80,48,163,216,64,102,192,157,68,59,78,25,42,214,115,205,5,55], 
	[248,12,142,6,168,72,246,48,58,162,45,105,197,174,153,121,161,2,16,102,210,144,228,112,192,36,99,70,222,198,195,215,208,80,221,119,150,212,166,209,115,214,55,59,128,211,179,33,217,190,133,160,81,104,22,19,141,120,86,108,62,28,68,15,109,37,138,7,250,51,224,113,9,23,175,140,236,95,178,189,40,61,98,126,171,127,147,60,251,237,173,54,5,243,75,117,25,216,129,17,8,88,134,20,107,47,163,85,151,78,21,188,143,124,52,50,245,201,110,239,181,27,41,185,10,116,44,38,76,176,57,84,253,186,94,111,229,244,194,118,71,206,35,204,73,91,247,63,26,103,34,202,136,79,135,148,191,167,170,249,69,220,67,66,145,164,177,97,156,96,218,223,32,238,158,106,64,154,169,89,240,199,14,101,0,152,233,193,39,139,183,114,87,235,182,226,132,65,43,11,184,254,231,213,232,123,46,30,1,219,130,242,146,155,83,149,24,56,74,77,205,234,187,18,225,92,241,90,165,29,122,53,13,93,4,3,203,125,49,207,42,196,200,180,100,31,131,157,159,172,230,82,227,137,252,255],  
	[148,13,115,50,45,217,119,72,31,136,73,222,203,109,160,224,11,82,126,61,93,168,142,165,12,30,174,92,97,204,125,244,215,240,37,2,199,156,75,233,34,147,196,237,255,99,200,10,180,69,71,17,236,211,176,249,242,89,84,80,36,205,65,251,186,106,253,133,4,70,111,40,216,49,20,214,149,219,227,74,35,48,91,16,3,8,9,245,107,101,78,140,51,144,135,231,243,132,118,248,193,218,38,164,22,56,130,167,23,108,234,58,153,77,76,157,87,86,150,181,175,208,59,210,104,187,190,94,60,52,88,6,24,123,177,41,171,46,201,185,151,188,238,39,254,57,189,90,137,83,0,53,32,67,14,141,247,202,220,63,252,44,79,21,162,229,66,96,26,1,246,170,184,228,197,179,42,143,15,163,209,19,207,239,100,213,128,85,161,110,127,159,131,173,182,29,154,230,113,172,226,105,103,158,68,43,117,120,178,121,7,139,129,221,134,194,191,241,250,98,64,116,5,195,33,183,223,169,152,55,114,145,146,198,54,212,232,124,47,138,18,81,27,122,28,166,95,225,155,62,102,235,192,25,206,112],
	[245,135,127,156,199,237,48,93,179,107,57,157,11,120,52,20,192,82,147,226,236,203,186,124,255,242,88,161,43,1,100,35,137,229,191,78,212,241,173,133,91,232,36,104,97,87,126,32,175,16,5,155,219,193,26,218,178,115,123,225,116,228,8,3,202,198,77,160,184,6,45,29,240,80,134,79,172,10,117,95,28,128,253,248,62,27,211,244,144,81,213,13,60,221,17,12,168,98,167,103,102,214,132,83,47,18,170,220,24,41,66,53,162,65,44,223,90,252,208,231,84,174,243,142,145,0,150,63,105,68,165,197,31,46,38,73,58,201,42,76,238,111,129,149,164,159,118,250,154,71,224,234,246,206,121,138,207,19,188,59,86,108,7,113,148,40,182,195,239,210,21,217,64,139,112,216,37,222,204,181,49,180,166,30,143,50,158,106,61,101,169,136,200,176,251,92,205,163,34,190,125,55,153,194,185,23,151,233,2,114,146,51,70,75,72,227,110,249,69,177,89,247,56,33,141,54,131,119,235,187,67,109,254,230,39,171,9,215,130,14,96,74,85,183,152,122,140,15,99,209,196,189,94,4,22,25]
	]

def prep_psp():
	global ROUNDS, PLUS, PBOX_TABLE, SBOX_TABLE
	ROUNDS = 8
	PLUS = True
	PBOX_TABLE =[
	[13,5,11,12,14,2,4,9,3,7,6,10,1,8,15,0],
	[10,11,1,8,0,4,3,14,5,7,2,6,15,9,13,12],
	[9,4,10,7,6,15,2,12,8,13,3,14,1,5,11,0],
	[1,15,8,2,4,11,13,6,0,3,9,5,7,14,12,10],
	[4,9,6,12,8,11,7,0,5,15,14,10,2,13,3,1],  
	[11,2,7,14,12,4,3,15,5,9,13,6,8,10,0,1], 
	[6,13,10,14,5,2,15,12,1,11,7,4,8,0,9,3],
	[7,3,2,5,10,8,1,15,0,4,11,13,14,12,9,6]
	]

	SBOX_TABLE = [
	[215,100,199,204,233,49,84,194,69,140,121,160,92,130,244,234,161,181,33,152,3,60,34,206,39,102,30,25,255,56,131,214,156,76,164,133,124,249,73,196,134,195,99,227,70,88,207,236,15,242,132,19,47,169,225,87,13,4,115,16,61,248,229,216,67,139,96,189,128,170,136,9,110,238,237,180,71,185,159,86,174,41,109,222,209,80,53,224,85,172,245,147,163,213,107,232,95,201,168,230,116,46,243,228,31,218,153,103,148,62,190,66,106,48,38,59,137,98,35,226,21,26,122,187,252,239,166,90,182,82,65,51,144,54,28,179,23,197,36,184,11,246,7,126,42,58,198,177,157,250,151,186,17,27,125,12,10,55,117,205,143,188,6,43,254,57,220,32,253,8,211,20,0,223,145,63,52,105,221,200,97,138,142,114,167,29,129,183,81,251,146,212,175,150,5,176,202,231,208,192,241,158,210,247,127,104,44,173,193,18,120,72,119,64,149,77,79,68,14,135,74,141,111,240,75,112,162,24,101,118,219,93,83,191,91,1,78,154,178,40,155,108,94,45,171,37,165,2,113,203,217,123,50,22,235,89],
	[187,83,190,51,236,173,165,65,135,21,67,224,175,23,28,94,147,151,170,74,201,73,86,47,252,0,213,87,46,114,245,234,196,178,30,174,100,199,241,232,219,50,202,136,76,229,231,220,123,142,38,68,217,121,115,212,124,70,41,168,182,32,150,122,210,181,40,54,125,25,31,92,82,240,233,155,209,205,120,84,99,162,149,60,34,13,20,161,95,72,88,17,110,243,146,63,167,194,127,36,226,157,131,49,140,107,214,101,58,80,188,163,253,85,230,26,105,1,200,197,69,19,222,183,8,113,254,179,48,119,223,15,18,102,77,166,207,29,9,10,126,198,176,116,33,152,145,137,154,93,78,237,128,43,159,138,160,156,56,218,11,22,244,44,129,59,216,75,97,235,91,211,177,5,64,204,169,225,81,55,52,158,24,185,206,191,53,108,90,117,61,109,143,35,148,2,106,111,89,208,66,186,153,248,192,228,189,79,180,3,139,239,171,172,132,103,96,215,238,193,16,6,12,195,42,164,221,134,4,7,71,62,203,249,39,112,227,250,144,98,251,37,45,133,246,184,255,27,118,141,247,104,130,242,14,57],
	[141,239,125,140,240,203,207,151,166,254,237,79,221,147,160,190,195,199,62,149,113,39,201,219,222,164,97,150,144,159,127,33,137,7,176,121,212,119,25,114,120,11,208,88,161,104,34,95,57,94,3,183,142,210,143,103,111,255,14,18,165,152,52,51,163,236,188,107,100,220,245,243,229,192,73,128,48,109,244,105,225,248,40,101,194,189,228,56,185,246,71,85,131,130,153,38,106,76,167,231,43,146,216,21,78,42,158,138,172,136,10,129,132,50,2,72,1,234,148,196,224,235,35,92,108,200,162,249,29,63,218,75,226,181,98,58,241,23,213,145,177,232,32,59,30,44,154,36,22,53,242,4,31,24,102,169,227,17,155,13,86,116,93,68,61,230,133,46,8,96,202,187,81,253,6,123,54,174,179,77,215,170,80,12,193,204,175,173,223,67,184,66,198,41,126,15,26,45,65,28,135,16,233,250,9,238,112,70,139,49,134,115,205,217,118,124,182,60,74,168,117,0,247,84,55,122,90,82,186,178,91,64,191,83,37,206,69,180,5,214,211,157,87,171,110,251,27,47,19,156,252,197,99,209,89,20],
	[88,92,11,6,1,127,76,183,211,132,120,22,50,126,237,13,25,65,185,159,27,246,222,45,124,195,200,2,150,190,192,236,29,203,243,31,73,64,208,28,189,75,49,240,194,30,252,216,93,173,117,112,165,85,153,38,21,101,41,168,35,226,148,59,171,138,84,242,198,36,10,135,106,60,119,47,86,115,0,170,40,125,23,205,207,178,233,224,17,14,141,56,239,37,105,156,166,181,143,108,215,151,235,66,204,99,102,32,212,103,193,244,220,214,179,160,133,157,129,146,172,7,196,149,44,46,58,202,223,186,55,167,81,26,231,33,121,77,62,80,169,248,68,131,206,245,43,83,142,162,228,69,175,155,218,213,197,5,140,147,191,199,74,18,230,52,54,96,110,97,161,20,90,232,145,24,217,187,104,95,100,72,152,12,241,113,234,174,116,118,78,61,67,144,82,34,201,128,130,51,238,39,87,53,3,249,91,221,177,182,57,9,254,210,19,229,71,255,137,164,122,219,247,176,107,48,225,42,158,94,109,136,114,163,184,111,134,4,70,63,209,123,79,188,16,98,180,139,89,8,15,253,251,250,227,154],
	[46,92,113,219,175,201,98,34,109,25,154,248,27,223,41,205,80,102,119,138,190,247,244,20,4,13,229,228,10,108,50,59,197,159,19,121,105,122,156,213,145,54,204,172,18,246,124,96,89,237,233,29,227,220,51,235,236,23,203,249,130,0,52,74,160,69,186,8,180,88,217,73,141,169,243,155,161,110,2,255,91,231,30,67,196,75,48,182,97,3,174,221,5,218,47,158,40,234,167,212,72,136,42,202,61,33,117,211,137,118,210,226,99,242,45,55,66,94,230,153,93,151,132,100,129,173,7,164,152,177,131,222,62,170,183,115,193,43,81,83,157,39,63,9,35,111,58,103,195,31,6,38,189,140,139,70,65,144,232,209,68,114,188,127,22,126,245,224,166,77,57,79,123,128,84,162,225,142,252,176,168,253,199,95,134,78,165,191,214,133,147,17,241,76,146,12,198,120,239,101,192,26,181,49,149,1,206,107,125,200,24,36,194,240,135,60,53,37,14,28,185,163,64,179,251,207,178,184,82,148,32,16,208,216,86,90,238,21,215,87,250,254,106,143,171,15,11,56,85,44,104,71,150,116,187,112],
	[68,111,80,147,20,121,171,222,84,252,61,48,32,25,152,14,21,39,199,253,69,197,38,146,206,108,156,117,229,82,8,43,192,93,188,213,210,103,177,37,100,240,89,133,9,237,148,31,17,90,30,87,28,71,228,233,173,130,97,149,205,106,184,142,191,119,99,145,218,15,181,57,1,11,189,12,248,78,50,7,166,76,101,194,141,66,169,56,195,0,202,140,110,129,26,42,241,126,182,204,139,109,254,143,118,187,157,107,4,201,122,170,10,216,102,155,19,13,209,214,16,144,86,116,5,114,159,245,230,67,190,104,174,185,242,34,113,136,132,120,65,244,33,75,203,128,226,217,135,167,162,151,51,239,250,53,83,150,45,58,215,225,164,112,158,138,134,255,23,6,98,77,247,137,172,196,251,115,131,124,36,41,22,70,24,3,127,92,165,179,176,81,153,59,221,29,212,79,27,224,88,154,49,85,249,211,35,246,63,178,160,91,200,168,186,219,163,44,52,47,220,223,123,60,238,72,64,208,180,74,175,236,231,193,62,227,95,73,232,183,235,54,2,125,207,161,55,94,198,96,105,46,40,243,234,18],
	[60,241,239,209,66,124,196,12,45,13,215,159,96,161,78,73,232,82,227,184,245,63,27,176,192,152,40,2,146,214,57,206,199,42,162,11,166,106,25,213,117,242,116,212,142,190,31,122,20,4,55,9,72,87,186,7,238,230,15,131,187,74,89,136,112,249,148,28,100,172,236,217,156,99,173,51,39,204,171,61,208,228,70,24,56,0,35,43,231,47,167,163,113,253,52,220,246,189,244,91,114,222,49,18,77,218,75,110,165,237,157,126,203,233,141,14,229,174,53,200,210,205,119,80,198,153,37,188,103,29,32,207,254,83,225,68,44,46,158,195,23,90,92,240,67,223,251,38,140,48,250,118,3,120,177,197,22,219,145,128,255,175,95,248,10,76,69,62,109,216,6,133,65,98,123,125,79,115,149,193,144,143,85,150,8,16,127,36,234,30,160,226,191,252,211,201,81,41,26,164,17,50,84,94,130,168,178,169,34,102,137,179,224,185,97,243,194,170,21,181,183,147,151,139,138,132,121,247,155,129,111,182,154,202,19,64,104,180,1,107,54,101,86,33,88,135,5,71,108,59,58,134,235,221,93,105],
	[126,194,160,74,117,77,34,72,50,65,149,200,24,150,119,73,32,223,103,139,157,123,212,31,169,237,141,143,197,179,46,64,113,211,142,235,27,178,48,83,243,201,20,9,91,144,86,125,106,190,3,4,53,218,38,221,196,180,102,134,98,156,204,217,101,82,192,135,2,244,222,248,183,242,0,16,127,84,140,234,17,148,239,66,100,21,30,43,199,132,174,41,28,116,254,131,205,187,11,208,171,229,191,94,215,189,110,79,25,255,59,42,147,47,108,249,62,138,36,6,15,210,52,51,75,49,176,13,231,185,224,152,162,159,246,112,95,104,198,120,99,5,164,247,55,14,238,111,155,22,118,170,227,163,213,40,203,129,58,173,67,12,69,220,168,57,81,8,158,23,130,253,29,39,245,78,56,230,181,193,250,44,107,216,186,70,252,136,182,61,68,240,80,121,207,226,161,33,232,76,54,109,85,88,145,60,137,175,19,63,122,10,96,214,228,18,26,225,165,202,35,195,184,97,90,153,87,233,167,45,71,219,146,115,37,7,166,172,206,154,209,92,177,89,251,133,93,1,128,236,188,124,151,114,241,105]
	]


def pad(msg, block_size):
	if len(msg) % block_size != 0:
		return msg + ' ' * (block_size - (len(msg) % block_size))
	return msg

def sbox(block, phase = 0, rev = False):
	out= [' '] * BLOCK_SIZE
	if rev:
		for i in range(BLOCK_SIZE):
			out[i] = chr(SBOX_TABLE[phase].index(ord(block[i])))
	else:
		for i in range(BLOCK_SIZE):
			out[i] = chr(SBOX_TABLE[phase][ord(block[i])])
	return ''.join(out)

def pbox(block, phase = 0, rev = False):
	out = [' '] * BLOCK_SIZE
	if rev:
		for i in range(BLOCK_SIZE):
			out[PBOX_TABLE[phase][i]] = block[i]
	else:
		for i in range(BLOCK_SIZE):
			out[i] = block[PBOX_TABLE[phase][i]]
	return ''.join(out)

def xbox(block, key):
	out = [' '] * BLOCK_SIZE
	for i in range(BLOCK_SIZE):
		out[i] = chr( ord(block[i]) ^ ord(key[i]) )
	return ''.join(out)

def ps_block(block, key, decrypt = False, key_after_md5 = False):
	if not key_after_md5:
		key = md5(key).hexdigest().decode('hex')
		key = pad(key,BLOCK_SIZE)
		print repr(key)

	if decrypt:
		for i in range(ROUNDS)[::-1]:
			roundkey = key
			if PLUS:
				roundkey = pad(md5(key + str(i)), BLOCK_SIZE)
			block = xbox(block,roundkey)
			block = pbox(block,i,decrypt)
			block = sbox(block,i,decrypt)
	else:
		for i in range(ROUNDS):
			roundkey = key
			if PLUS:
				roundkey = pad(md5(key + str(i)), BLOCK_SIZE)
			block = sbox(block,i,decrypt)
			block = pbox(block,i,decrypt)
			block = xbox(block,roundkey)

	return block

def ps(msg, key, decrypt = False, key_after_md5 = False):
	msg = pad(msg, BLOCK_SIZE)
	blocks = [msg[i * BLOCK_SIZE: (i + 1) * BLOCK_SIZE] for i in range((len(msg) / BLOCK_SIZE))] 
	res = []
	for block in blocks:
		res.append(ps_block(block, key, decrypt, key_after_md5))
	return ''.join(res)

def ps_block_multi(block, keys, decrypt = False):
	if decrypt:
		for i in range(ROUNDS)[::-1]:
			roundkey = keys[i]
			block = xbox(block,roundkey)
			block = pbox(block,i,decrypt)
			block = sbox(block,i,decrypt)
	else:
		for i in range(ROUNDS):
			roundkey = keys[i]
			block = sbox(block,i,decrypt)
			block = pbox(block,i,decrypt)
			block = xbox(block,roundkey)

	return block

def ps_multi(msg, keys, decrypt = False):
	msg = pad(msg, BLOCK_SIZE)
	blocks = [msg[i * BLOCK_SIZE: (i + 1) * BLOCK_SIZE] for i in range((len(msg) / BLOCK_SIZE))] 
	res = []
	for block in blocks:
		res.append(ps_block_multi(block, keys, decrypt))
	return ''.join(res)


